from aiogram import F, Router
from aiogram.types import CallbackQuery
import logging
from dicts import users, initialize_user
from keyboards.main_menu import start_menu
from filters.filters import user_exists

router = Router()

@router.callback_query(F.data == "ü•ó–î–æ–±–∞–≤–∏—Ç—å –±–ª—é–¥–∞", user_exists)
@router.callback_query(F.data == "dish_no_callback", user_exists)
async def new_dish_callback(callback: CallbackQuery):
    if (callback.message is not None) and (hasattr(callback.message, 'edit_text')):
        await callback.message.edit_text('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≥–ª–µ–≤–æ–¥–æ–≤ –≤ –≤–∞—à–µ–º –±–ª—é–¥–µ.')

        users[callback.from_user.id]['selects_dish'] = True
        users[callback.from_user.id]['selects_carbs'] = True
        users[callback.from_user.id]['selects_protein'] = False
        users[callback.from_user.id]['selects_fats'] = False
        users[callback.from_user.id]['selects_name'] = False

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è
        users[callback.from_user.id]['selects_info'] = False
        users[callback.from_user.id]['selects_age'] = False
        users[callback.from_user.id]['selects_weight'] = False
        users[callback.from_user.id]['selects_height'] = False
        # –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏
    await callback.answer()


@router.callback_query(F.data == "üëÄ–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", user_exists)
@router.callback_query(F.data == "user_no_callback", user_exists)
async def reuser_callback(callback: CallbackQuery):
    if (callback.message is not None) and (hasattr(callback.message, 'edit_text')):
        await callback.message.edit_text('–í—ã —Ä–µ—à–∏–ª–∏ —É–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ\n–î–ª—è –Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç.')

        users[callback.from_user.id]['selects_dish'] = False
        users[callback.from_user.id]['selects_info'] = True
        users[callback.from_user.id]['selects_age'] = True
        users[callback.from_user.id]['selects_weight'] = False
        users[callback.from_user.id]['selects_height'] = False

    await callback.answer()


@router.callback_query(F.data == "dish_yes_callback", user_exists)
@router.callback_query(F.data == "user_yes_callback", user_exists)
async def menu_callback(callback: CallbackQuery):
    if (callback.message is not None) and (hasattr(callback.message, 'edit_text')):

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –±–ª—é–¥–∞, —Å–æ—Ö—Ä–∞–Ω—è–µ–º
        if users[callback.from_user.id]['select_is_over']:
            users[callback.from_user.id]['custom_dishes'].append({
                'name': users[callback.from_user.id]['dish_name'],
                'carbs': users[callback.from_user.id]['carbs'],
                'protein': users[callback.from_user.id]['protein'],
                'fats': users[callback.from_user.id]['fats'],
            })
            users[callback.from_user.id]['select_is_over'] = False
            users[callback.from_user.id]['selects_dish'] = False
            logging.info(users[callback.from_user.id])
        await callback.message.edit_text('–≠—Ç–æ –º–µ–Ω—é. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å.\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—É–Ω–∫—Ç–æ–≤ –Ω–∏–∂–µ:', reply_markup=start_menu())

    await callback.answer("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã")